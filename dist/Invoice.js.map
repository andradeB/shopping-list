{"version":3,"sources":["../src/Invoice.ts"],"names":["Invoice","constructor","item","emails","splitDue","divisor","length","dividend","totalCents","quotient","remainder","divide","map","email","i","cents","price","Math","floor"],"mappings":"AAEA,OAAO,MAAMA,OAAN,CAAc;AAKnBC,EAAAA,WAAW,CAACC,IAAD,EAAiBC,MAAjB,EAAmC;AAAA,SA2B9CC,QA3B8C,GA2BnC,MAAMJ,OAAO,CAACI,QAAR,CAAiB,KAAKF,IAAtB,EAA4B,KAAKC,MAAjC,CA3B6B;;AAC5C,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;AACD;;AAEc,SAARC,QAAQ,CAACF,IAAD,EAAiBC,MAAjB,EAAmC;AAEhD,UAAME,OAAO,GAAGF,MAAM,CAACG,MAAvB;AACA,UAAMC,QAAQ,GAAGL,IAAI,CAACM,UAAtB;AAEA,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA0BV,OAAO,CAACW,MAAR,CAAeN,OAAf,EAAwBE,QAAxB,CAAhC;AAEA,WAAOJ,MAAM,CAACS,GAAP,CAAW,CAACC,KAAD,EAAQC,CAAR,KAAc;AAC9B,YAAMC,KAAK,GAAGD,CAAC,KAAKX,MAAM,CAACG,MAAP,GAAgB,CAAtB,GAA0BG,QAAQ,GAAGC,SAArC,GAAiDD,QAA/D;AACA,YAAMO,KAAK,GAAGD,KAAK,GAAG,GAAtB;AAEA,aAAO;AAAEF,QAAAA,KAAF;AAASE,QAAAA,KAAT;AAAgBC,QAAAA;AAAhB,OAAP;AACD,KALM,CAAP;AAMD;;AAEoB,SAANL,MAAM,CAACN,OAAD,EAAkBE,QAAlB,EAAoC;AACvD,UAAME,QAAQ,GAAGQ,IAAI,CAACC,KAAL,CAAWX,QAAQ,GAAGF,OAAtB,CAAjB;AACA,UAAMK,SAAS,GAAGH,QAAQ,GAAGF,OAA7B;AAEA,WAAO;AAAEI,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAP;AACD;;AA9BkB","sourcesContent":["import { IBuyable } from './IBuyable';\n\nexport class Invoice {\n  item: IBuyable;\n  emails: string[];\n  remainderEmail?: string;\n\n  constructor(item: IBuyable, emails: string[]) {\n    this.item = item;\n    this.emails = emails;\n  }\n\n  static splitDue(item: IBuyable, emails: string[]) {\n\n    const divisor = emails.length;\n    const dividend = item.totalCents;\n\n    const { quotient, remainder } = Invoice.divide(divisor, dividend);\n\n    return emails.map((email, i) => {\n      const cents = i === emails.length - 1 ? quotient + remainder : quotient;\n      const price = cents / 100;\n\n      return { email, cents, price };\n    });\n  }\n\n  private static divide(divisor: number, dividend: number) {\n    const quotient = Math.floor(dividend / divisor);\n    const remainder = dividend % divisor;\n\n    return { quotient, remainder };\n  }\n\n  splitDue = () => Invoice.splitDue(this.item, this.emails);\n}\n"],"file":"Invoice.js"}