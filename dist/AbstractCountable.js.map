{"version":3,"sources":["../src/AbstractCountable.ts"],"names":["AbstractCountable","constructor","amount","_amount","value","Number","isInteger","Error"],"mappings":"AAEA,OAAO,MAAeA,iBAAf,CAAsD;AAG3DC,EAAAA,WAAW,CAACC,MAAM,GAAG,CAAV,EAAa;AAAA,SAFhBC,OAEgB,GAFE,CAEF;AACtB,SAAKD,MAAL,GAAcA,MAAd;AACD;;AAES,MAANA,MAAM,CAACE,KAAD,EAAgB;AACxB,QAAI,CAACC,MAAM,CAACC,SAAP,CAAiBF,KAAjB,CAAL,EAA8B;AAC5B,YAAM,IAAIG,KAAJ,CAAU,wBAAV,CAAN;AACD;;AAED,SAAKJ,OAAL,GAAeC,KAAf;AACD;;AAES,MAANF,MAAM,GAAG;AACX,WAAO,KAAKC,OAAZ;AACD;;AAjB0D","sourcesContent":["import { ICountble } from './ICountable';\n\nexport abstract class AbstractCountable implements ICountble {\n  private _amount: number = 0;\n\n  constructor(amount = 1) {\n    this.amount = amount;\n  }\n\n  set amount(value: number) {\n    if (!Number.isInteger(value)) {\n      throw new Error('Amount must be Integer');\n    }\n\n    this._amount = value;\n  }\n\n  get amount() {\n    return this._amount;\n  }\n}\n"],"file":"AbstractCountable.js"}